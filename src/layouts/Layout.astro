---
import TextboxEA from '../components/layout/TextboxEA.svelte';
import Background from '../components/layout/Background.svelte';
import { backgroundRandom } from '../data/scripts/imagesRandom';
import PinkyMouse from '../components/eastereggs/PinkyMouse.svelte';

const {frontmatter} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" />
		<link rel="manifest" href="/manifest.webmanifest">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://use.typekit.net/mvc1mah.css" />
		<meta name="generator" content={Astro.generator} />
		<title>{frontmatter.title}</title>
		<meta
      name="description"
      content={frontmatter.description ? frontmatter.description : "The official (tiny) website of Diamant."}
    />
    <meta name="keywords" content="diamant.dev,diamantdev,herisdia,diamant" />
    <meta name="robots" content="index, follow" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="language" content="English" />
	</head>
	<body class="bg-[#0f0f0f] overflow-hidden">
		<TextboxEA client:only />
		<PinkyMouse client:only />
		<div id="container" class="h-screen w-full flex items-center justify-center">
  		<div id="content" class="w-full lg:w-6/7">
				<div class="lg:grid items-center lg:grid-flow-row lg:grid-cols-2 lg:grid-rows-1">
    			<div id="box" class="text-white overflow-y-auto overflow-x-hidden grid items-center h-screen pt-16 pb-16 pl-4 pr-4 ">
  					<div id="boxcontent" class="block-inline font-mundial w-full text-[#ece0f3]">
    					<slot />
  					</div>
					</div>
					<Background src={frontmatter.bgSrc ? frontmatter.bgSrc : backgroundRandom()} client:load />
  			</div>
			</div>
		</div>
	</body>
	<script>
		if('serviceWorker' in navigator) {
			window.addEventListener('load', () => {
				navigator.serviceWorker.register('/sw.js')
      })
    }
		
		import { registerSW } from 'virtual:pwa-register';
		registerSW({
			onRegistered(swr) {
				console.log(`SW registered: ${swr}`);
			},
			onRegisterError(error) {
				console.log('SW registration error', error);
			},
			onNeedRefresh() {
				window.location.reload();
			},
		});
  </script>
</html>

<style is:global>
	:root {
		--primary: #b69bc9;
		--secondary: #e2ceef;
		--selection: #ca9eec69;
		--selection-text: #fff;
	}

	::selection {
		background: var(--selection);
		color: var(--selection-text);
	}

	@tailwind base;
	@layer base {
  h1 {
    @apply text-2xl;
  }
  h2 {
    @apply text-xl;
  }
  h3 {
    @apply text-lg;
  }
  p, ul {
    @apply text-base mt-1 mb-1;
  }

	@tailwind components;
	@tailwind utilities;
}
</style>
